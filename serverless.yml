service: serverless-rest-api-with-dynamodb

frameworkVersion: ">=2.51.2"

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  environment:
    DYNAMODB_TABLE: Credentials
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


package:
  exclude:
    - ./**
  include:
    - listCredentials/*.py
    - getCredentials/*.py
    - postCredentials/*.py

functions:
  create:
    handler: postCredentials/postCredentials.create
    events:
      - http:
          path: postCredentials
          method: post
          cors: true

  list:
    handler: listCredentials/listCredentials.list
    events:
      - http:
          path: listCredentials
          method: get
          cors: true

  get:
    handler: getCredentials/getCredentials.get
    events:
      - http:
          path: getCredentials/{username}
          method: get
          cors: true

resources:
  Resources:
    DynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}